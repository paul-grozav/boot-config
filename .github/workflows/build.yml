# ============================================================================ #
name: Build

# Triggers the workflow on push to the 'main' branch
on:
  push:
    branches:
    - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run
# in-progress and latest queued. However, do NOT cancel in-progress runs as we
# want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

env:
  LC_ALL: C.UTF-8

jobs:
  # Build job
  build:
    # runs-on: self-hosted
    # Uses a free GitHub runner
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Pages
      uses: actions/configure-pages@v5
    - name: Build web app
      run: |
        apk add git perl make gcc libc-dev xz-dev syslinux xorriso &&
        script_dir="$( cd $( dirname ${0} ) && pwd )" &&
        git clone https://github.com/ipxe/ipxe.git &&
        cd ${script_dir}/ipxe/src &&

        # nano config/console.h # uncomment CONSOLE_SERIAL if you need it

        # Make all (default config)
        # make &&

        ( cat - <<EOF
        #!ipxe
        echo Starting iPXE embeded script!
        ifstat
        dhcp
        shell
        EOF
        ) > ${script_dir}/my_script.ipxe

        # See: https://ipxe.org/appnote/buildtargets
        # Make .iso
        make \
          DEBUG=dhcp,tftp,http \
          ${script_dir}/ipxe/src/bin/ipxe.iso \
          EMBED=${script_dir}/my_script.ipxe \
          &&

        # For HTTPS support:
        # apk add openssl openssl-dev &&
        # make bin/ipxe.iso TRUST=/etc/ssl/certs/ca-certificates.crt \
        #   DEBUG=tls,x509:3,certstore,privkey
        # Or with TRUSTing LE's R3:
        # curl https://letsencrypt.org/certs/lets-encrypt-r3.pem -o /root/r3.pem
        # make bin/ipxe.iso \
        #   TRUST=/root/r3.pem DEBUG=tls,x509:3,certstore,privkey
        # See also: make bin-x86_64-efi/ipxe.efi -j10 \
        #   DEBUG=dhcp,tftp,http EMBED=/mnt/my_script.ipxe
        # make bin-x86_64-efi/snponly.efi -j10 \
        #   DEBUG=dhcp,tftp,http
        # Note that embeding a script in snponly seems to corrupt the initramfs
        # However, snponly has support for running autoexec.ipxe that gets
        # pulled from the TFTP server that offers the .efi binary.

        cp ${script_dir}/ipxe/src/bin/ipxe.iso ${script_dir}/http/ &&
        exit 0
    - name: Upload static files as artifact
      id: deployment
      uses: actions/upload-pages-artifact@v3
      with:
        path: http
        retention-days: 1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # Uses a free GitHub runner
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
# ============================================================================ #
